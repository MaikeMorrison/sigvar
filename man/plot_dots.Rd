% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_vis_functions.R
\name{plot_dots}
\alias{plot_dots}
\title{Plot the mean mutational signature attributions of each group of samples}
\usage{
plot_dots(
  Q,
  K = ncol(Q) - 1,
  group = colnames(Q)[1],
  max_dotsize = 5,
  pivot = FALSE,
  facet
)
}
\arguments{
\item{Q}{A dataframe, matrix, or array representing mutatational signature
relative attributions.
Each row represents a sample. The first \code{ncol(Q)-K} columns may
contain other information about the sample, and must contain the grouping
variable. When restricted to the last \code{K} columns, the rows of this
matrix must sum to 1.}

\item{K}{The number of signatures in the matrix. Each vector must
must have \code{K} categories. Default is the number of columns in \code{Q}
minus 1 (since one column must specify the group).}

\item{group}{A string specifying the name of the column that describes which
group/population each sample belongs to. Default is the first column name.}

\item{max_dotsize}{Optional; a number specifying the maximum size for each dot.}

\item{pivot}{Optional; set \code{pivot=TRUE} if you would like to plot groups
on the y-axis and signatures on the x-axis. Default is \code{pivot=FALSE}.}

\item{facet}{Optional; a string specifying the name of the column by which
you would like to facet your plot.}
}
\value{
A ggplot object containing a dor plot visualization of the mean
mutational signature attributions
}
\description{
This function generates a dot plot with signatures along the y-axis,
group/populations along the x-axis, dot size corresponding to the fraction
of samples in each population containing a signature, and dot color
corresponding to the mean relative attribution of mutations to that
signature.
}
\examples{
  # Make an example matrix.
  # Each row is a sample. Rows sum to 1.
Q = matrix(c(
    "A", .4, .2, .4,
    "A", .5, .3, .2,
    "A", .5, .4, .1,
    "B", .6, .1, .3,
    "B", .6, .3, .1
  ),
  nrow = 5,
  byrow = TRUE
  )

  colnames(Q) = c("pop", "SBS1", "SBS2", "SBS3")
  Q = dplyr::mutate(data.frame(Q), dplyr::across(c(SBS1, SBS2, SBS3),
                                                 as.numeric))

plot_dots(Q,
 K = 3, # How many categories per vector?
  group = "pop"
)
}
